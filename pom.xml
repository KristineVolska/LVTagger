<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>lv.ailab.morphology</groupId>
	<artifactId>tagger</artifactId>
	<packaging>jar</packaging>
	<version>1.0.0-SNAPSHOT</version>
	<name>Stanford NLP-based POS and NER tagger for Latvian</name>
	<url>https://github.com/PeterisP/LVTagger</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencies>
		<dependency>
			<groupId>lv.ailab.morphology</groupId>
			<artifactId>morphology</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>lv.ailab.morphology</groupId>
			<artifactId>lv-morpho-model</artifactId>
			<version>1.0.0</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>
	</dependencies>	

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<version>2.12.4</version>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- Build even if tests fail, as we tend to build with known bugs that aren't yet fixed -->
					<testFailureIgnore>true</testFailureIgnore>
                    <!-- The tagger tests currently are for evaluation, and not useful to run at every build. TODO - Perhaps a small subset for sanity check should be run. -->
                    <skipTests>true</skipTests>
				</configuration>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>lv.lumii.morphotagger.MorphoCRF</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>lv.lumii.morphotagger.MorphoCRF</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-my-jar-with-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-dependency-plugin</artifactId>
			  <version>2.10</version>
			  <executions>
			    <execution>
			      <id>copy-dependency</id>
			      <phase>compile</phase>
			      <goals>
			        <goal>copy</goal>
			      </goals>
			      <configuration>
			        <artifactItems>
			          <artifactItem>
			            <groupId>lv.ailab.morphology</groupId>
			            <artifactId>lv-morpho-model</artifactId>
			            <type>ser.gz</type>
			            <overWrite>true</overWrite>
			            <outputDirectory>target/classes/models</outputDirectory>
			          </artifactItem>
			        </artifactItems>
		            <stripVersion>true</stripVersion>
			      </configuration>
			    </execution>
			  </executions>
			</plugin>
		</plugins>	
	</build>

</project>